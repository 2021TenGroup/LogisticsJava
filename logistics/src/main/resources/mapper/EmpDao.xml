<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.logistics.dao.EmpDao">
    <resultMap type="com.logistics.vo.EmpVo" id="EmpMap">
        <id property="empId" column="Emp_Id" jdbcType="INTEGER"/>
        <result property="positionId" column="Position_Id" jdbcType="INTEGER"/>
        <result property="outletsId" column="Outlets_Id" jdbcType="INTEGER"/>
        <result property="empNumber" column="Emp_number" jdbcType="VARCHAR"/>
        <result property="userName" column="User_Name" jdbcType="VARCHAR"/>
        <result property="passWord" column="Pass_word" jdbcType="VARCHAR"/>
        <result property="phone" column="Phone" jdbcType="INTEGER"/>
        <result property="identityCards" column="Identity_cards" jdbcType="VARCHAR"/>
        <result property="address" column="Address" jdbcType="VARCHAR"/>
        <result property="zPhotographs" column="Z_photographs" jdbcType="VARCHAR"/>
        <result property="fPhotographs" column="F_photographs" jdbcType="VARCHAR"/>
        <result property="empName" column="Emp_Name" jdbcType="VARCHAR"/>
        <result property="addname" column="AddName" jdbcType="VARCHAR"/>
        <result property="addtime" column="AddTime" jdbcType="TIMESTAMP"/>
        <result property="updatename" column="UpdateName" jdbcType="VARCHAR"/>
        <result property="updatetime" column="UpdateTime" jdbcType="TIMESTAMP"/>
        <result property="deletename" column="DeleteName" jdbcType="VARCHAR"/>
        <result property="deletetime" column="DeleteTime" jdbcType="TIMESTAMP"/>
        <result property="timeliness" column="TimeLiness" jdbcType="INTEGER"/>
        <association property="outletsVo" javaType="com.logistics.vo.OutletsVo">
            <id property="outletsId" column="Outlets_Id" jdbcType="INTEGER"/>
            <result property="outletsNumber" column="Outlets_Number" jdbcType="VARCHAR"/>
            <result property="outletsName" column="Outlets_Name" jdbcType="VARCHAR"/>
            <result property="outletsBelonging" column="Outlets_Belonging" jdbcType="INTEGER"/>
            <result property="outletsPerson" column="Outlets_Person" jdbcType="VARCHAR"/>
            <result property="outletsPhone" column="Outlets_Phone" jdbcType="INTEGER"/>
            <result property="outletsProvince" column="Outlets_Province" jdbcType="VARCHAR"/>
            <result property="outletsCity" column="Outlets_City" jdbcType="VARCHAR"/>
            <result property="outletsRegion" column="Outlets_Region" jdbcType="VARCHAR"/>
            <result property="outletsAddress" column="Outlets_Address" jdbcType="VARCHAR"/>
            <result property="outletsRemarks" column="Outlets_Remarks" jdbcType="VARCHAR"/>
            <result property="addname" column="AddName" jdbcType="VARCHAR"/>
            <result property="addtime" column="AddTime" jdbcType="TIMESTAMP"/>
            <result property="updatename" column="UpdateName" jdbcType="VARCHAR"/>
            <result property="updatetime" column="UpdateTime" jdbcType="TIMESTAMP"/>
            <result property="deletename" column="DeleteName" jdbcType="VARCHAR"/>
            <result property="deletetime" column="DeleteTime" jdbcType="TIMESTAMP"/>
            <result property="timeliness" column="TimeLiness" jdbcType="INTEGER"/>
        </association>
        <association property="perPositionVo" javaType="com.logistics.vo.PerPositionVo">
            <id property="positionId" column="Position_Id" jdbcType="INTEGER"/>
            <result property="positionName" column="Position_Name" jdbcType="VARCHAR"/>
            <result property="outletsId" column="Outlets_Id" jdbcType="INTEGER"/>
            <result property="addtime" column="AddTime" jdbcType="TIMESTAMP"/>
            <result property="updatename" column="UpdateName" jdbcType="VARCHAR"/>
            <result property="updatetime" column="UpdateTime" jdbcType="TIMESTAMP"/>
            <result property="deletename" column="DeleteName" jdbcType="VARCHAR"/>
            <result property="deletetime" column="DeleteTime" jdbcType="TIMESTAMP"/>
            <result property="timeliness" column="TimeLiness" jdbcType="INTEGER"/>
        </association>
    </resultMap>

    <sql id="Base_Column_List">
          e.Emp_Id, e.Position_Id, e.Outlets_Id, e.Emp_number, e.User_Name,
           e.Pass_word, e.Phone, e.Identity_cards, e.Address, e.Z_photographs,
            e.F_photographs, e.Emp_Name, e.AddTime, e.UpdateName, e.UpdateTime, e.DeleteName,
             e.DeleteTime, e.TimeLiness
    </sql>

    <!--查询所有[分页]-->
    <select id="selectAllEmps" resultMap="EmpMap">
        select
        <include refid="Base_Column_List" />,
        o.Outlets_Name,o.Outlets_Id,p.Position_Name,p.Position_Id
        from emp e
        inner join outlets o on e.Outlets_Id=o.Outlets_Id
        left join per_position p on e.Position_Id=p.Position_Id
        where e.TimeLiness = 0
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="EmpMap">
        select
          Emp_Id, Position_Id, Outlets_Id, Emp_number, User_Name, Pass_word, Phone, Identity_cards, Address, Z_photographs, F_photographs, Emp_Name, AddTime, UpdateName, UpdateTime, DeleteName, DeleteTime, TimeLiness
        from lms.emp
        where Emp_Id = #{empId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="EmpMap">
        select
          Emp_Id, Position_Id, Outlets_Id, Emp_number, User_Name, Pass_word, Phone, Identity_cards, Address, Z_photographs, F_photographs, Emp_Name, AddTime, UpdateName, UpdateTime, DeleteName, DeleteTime, TimeLiness
        from lms.emp
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="EmpMap">
        select
        Emp_Id, Position_Id, Outlets_Id, Emp_number, User_Name, Pass_word, Phone, Identity_cards, Address,
        Z_photographs, F_photographs, Emp_Name, AddTime, UpdateName, UpdateTime, DeleteName, DeleteTime, TimeLiness
        from lms.emp
        <where>
            <if test="empId != null">
                and Emp_Id = #{empId}
            </if>
            <if test="positionId != null">
                and Position_Id = #{positionId}
            </if>
            <if test="outletsId != null">
                and Outlets_Id = #{outletsId}
            </if>
            <if test="empNumber != null and empNumber != ''">
                and Emp_number = #{empNumber}
            </if>
            <if test="userName != null and userName != ''">
                and User_Name = #{userName}
            </if>
            <if test="passWord != null and passWord != ''">
                and Pass_word = #{passWord}
            </if>
            <if test="phone != null">
                and Phone = #{phone}
            </if>
            <if test="identityCards != null and identityCards != ''">
                and Identity_cards = #{identityCards}
            </if>
            <if test="address != null and address != ''">
                and Address = #{address}
            </if>
            <if test="zPhotographs != null and zPhotographs != ''">
                and Z_photographs = #{zPhotographs}
            </if>
            <if test="fPhotographs != null and fPhotographs != ''">
                and F_photographs = #{fPhotographs}
            </if>
            <if test="empName != null and empName != ''">
                and Emp_Name = #{empName}
            </if>
            <if test="addtime != null">
                and AddTime = #{addtime}
            </if>
            <if test="updatename != null and updatename != ''">
                and UpdateName = #{updatename}
            </if>
            <if test="updatetime != null">
                and UpdateTime = #{updatetime}
            </if>
            <if test="deletename != null and deletename != ''">
                and DeleteName = #{deletename}
            </if>
            <if test="deletetime != null">
                and DeleteTime = #{deletetime}
            </if>
            <if test="timeliness != null">
                and TimeLiness = #{timeliness}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="empId" useGeneratedKeys="true">
        insert into lms.emp(Position_Id, Outlets_Id, Emp_number, User_Name, Pass_word, Phone, Identity_cards, Address, Z_photographs, F_photographs, Emp_Name,AddName, AddTime, UpdateName, UpdateTime, DeleteName, DeleteTime, TimeLiness)
        values (#{positionId}, #{outletsId}, #{empNumber}, #{userName}, #{passWord}, #{phone}, #{identityCards}, #{address}, #{zPhotographs}, #{fPhotographs}, #{empName}, #{addname}, #{addtime}, #{updatename}, #{updatetime}, #{deletename}, #{deletetime}, #{timeliness})
    </insert>

    <insert id="insertBatch" keyProperty="empId" useGeneratedKeys="true">
        insert into lms.emp(Position_Id, Outlets_Id, Emp_number, User_Name, Pass_word, Phone, Identity_cards, Address,
        Z_photographs, F_photographs, Emp_Name, AddTime, UpdateName, UpdateTime, DeleteName, DeleteTime, TimeLiness)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.positionId}, #{entity.outletsId}, #{entity.empNumber}, #{entity.userName}, #{entity.passWord},
            #{entity.phone}, #{entity.identityCards}, #{entity.address}, #{entity.zPhotographs}, #{entity.fPhotographs},
            #{entity.empName}, #{entity.addtime}, #{entity.updatename}, #{entity.updatetime}, #{entity.deletename},
            #{entity.deletetime}, #{entity.timeliness})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="empId" useGeneratedKeys="true">
        insert into lms.emp(Position_Id, Outlets_Id, Emp_number, User_Name, Pass_word, Phone, Identity_cards, Address,
        Z_photographs, F_photographs, Emp_Name, AddTime, UpdateName, UpdateTime, DeleteName, DeleteTime, TimeLiness)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.positionId}, #{entity.outletsId}, #{entity.empNumber}, #{entity.userName}, #{entity.passWord},
            #{entity.phone}, #{entity.identityCards}, #{entity.address}, #{entity.zPhotographs}, #{entity.fPhotographs},
            #{entity.empName}, #{entity.addtime}, #{entity.updatename}, #{entity.updatetime}, #{entity.deletename},
            #{entity.deletetime}, #{entity.timeliness})
        </foreach>
        on duplicate key update
        Position_Id = values(Position_Id) , Outlets_Id = values(Outlets_Id) , Emp_number = values(Emp_number) ,
        User_Name = values(User_Name) , Pass_word = values(Pass_word) , Phone = values(Phone) , Identity_cards =
        values(Identity_cards) , Address = values(Address) , Z_photographs = values(Z_photographs) , F_photographs =
        values(F_photographs) , Emp_Name = values(Emp_Name) , AddTime = values(AddTime) , UpdateName =
        values(UpdateName) , UpdateTime = values(UpdateTime) , DeleteName = values(DeleteName) , DeleteTime =
        values(DeleteTime) , TimeLiness = values(TimeLiness)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update lms.emp
        <set>
            <if test="positionId != null">
                Position_Id = #{positionId},
            </if>
            <if test="outletsId != null">
                Outlets_Id = #{outletsId},
            </if>
            <if test="empNumber != null and empNumber != ''">
                Emp_number = #{empNumber},
            </if>
            <if test="userName != null and userName != ''">
                User_Name = #{userName},
            </if>
            <if test="passWord != null and passWord != ''">
                Pass_word = #{passWord},
            </if>
            <if test="phone != null">
                Phone = #{phone},
            </if>
            <if test="identityCards != null and identityCards != ''">
                Identity_cards = #{identityCards},
            </if>
            <if test="address != null and address != ''">
                Address = #{address},
            </if>
            <if test="zPhotographs != null and zPhotographs != ''">
                Z_photographs = #{zPhotographs},
            </if>
            <if test="fPhotographs != null and fPhotographs != ''">
                F_photographs = #{fPhotographs},
            </if>
            <if test="empName != null and empName != ''">
                Emp_Name = #{empName},
            </if>
            <if test="addtime != null">
                AddTime = #{addtime},
            </if>
            <if test="updatename != null and updatename != ''">
                UpdateName = #{updatename},
            </if>
            <if test="updatetime != null">
                UpdateTime = #{updatetime},
            </if>
            <if test="deletename != null and deletename != ''">
                DeleteName = #{deletename},
            </if>
            <if test="deletetime != null">
                DeleteTime = #{deletetime},
            </if>
            <if test="timeliness != null">
                TimeLiness = #{timeliness},
            </if>
        </set>
        where Emp_Id = #{empId}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from lms.emp where Emp_Id = #{empId}
    </delete>

    <!--修改删除人与时效性-->
    <update id="deleteByEmps" parameterType="com.logistics.entity.Emp">
        update emp
        set
          DeleteName = #{deletename},
          DeleteTime = #{deletetime},
          TimeLiness = #{timeliness}
        where Emp_Id = #{empId}
    </update>

    <!--查询所有[分页]-->
    <select id="selectAllEmps3" resultMap="EmpMap">
        select
        <include refid="Base_Column_List" />,
        o.Outlets_Name,o.Outlets_Id,p.Position_Name,p.Position_Id
        from emp e
        inner join outlets o on e.Outlets_Id=o.Outlets_Id
        left join per_position p on e.Position_Id=p.Position_Id
        where e.TimeLiness = 0 and (e.Emp_number like #{value} or e.Emp_Name like #{value}) order by e.Emp_Id desc
    </select>

    <!--查询所有[分页]-->
    <select id="selectAllEmps2ByValue" resultMap="EmpMap">
        select
        <include refid="Base_Column_List" />,
        o.Outlets_Name,o.Outlets_Id,p.Position_Name,p.Position_Id
        from emp e
        inner join outlets o on e.Outlets_Id=o.Outlets_Id
        left join per_position p on e.Position_Id=p.Position_Id
        where e.TimeLiness = 0 and e.Outlets_Id=#{param1} and (e.Emp_number like #{param2} or e.Emp_Name like #{param2}) order by e.Emp_Id desc
    </select>

</mapper>

